# Build all with layer caching
# https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
name: build-with-layer-caching
on:
  push:
    branches: test # activate it only on test branch as a way to deactivate

env:
  FRONTEND_IMAGE: ghcr.io/${{ github.repository_owner }}/worldcup-frontend
  BACKEND_IMAGE: ghcr.io/${{ github.repository_owner }}/worldcup-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # - run: docker-compose build

      - name: Set version
        id: version
        run: |
          echo "BRANCH=${{ github.ref }}"
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo VERSION=$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      # This is the a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: ðŸŽ‰ Build and push frontend image
        uses: docker/build-push-action@v2
        with:
          context: ./client/
          push: false # This would be set to true in a real world deployment scenario.
          tags: ${{ env.FRONTEND_IMAGE }}:${{ steps.version.outputs.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: ðŸŽ‰ Build and push backend image
        uses: docker/build-push-action@v2
        with:
          context: ./server/
          push: false # This would be set to true in a real world deployment scenario.
          tags: ${{ env.BACKEND_IMAGE }}:${{ steps.version.outputs.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
